"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SuperAgentRequester = void 0;
const events_1 = require("events");
const request = __importStar(require("superagent"));
/**
 * SuperAgent Requester
 */
class SuperAgentRequester extends events_1.EventEmitter {
    constructor(options) {
        super();
        this._activeRequests = 0;
        this._options = Object.assign({
            timeout: 15000,
            maximum_parallelism: 5,
            parallelism_delay: 100,
            gracefulFailure: false
        }, options);
    }
    /**
     * Retrieve URL
     * @param url url to retrieve
     * @returns contents
     */
    async get(url) {
        if (this._options.gracefulFailure) {
            try {
                return await this.getResource(url);
            }
            catch (e) {
                this.emit("error", e);
                return null;
            }
        }
        else {
            return await this.getResource(url);
        }
    }
    async wait(ms) {
        return new Promise((resolve) => {
            setTimeout(() => {
                resolve();
            }, ms);
        });
    }
    async getResource(url) {
        while (this._activeRequests > this._options.maximum_parallelism) {
            await this.wait(this._options.parallelism_delay);
        }
        this.emit("requesting", url);
        this._activeRequests++;
        const response = await request
            .get(url)
            .set("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8")
            .set("Accept-Encoding", "gzip, deflate")
            .timeout(this._options.timeout)
            .buffer(true)
            .parse(request.parse.image);
        this._activeRequests--;
        this.emit("done", url, response.body);
        return response.body;
    }
}
exports.SuperAgentRequester = SuperAgentRequester;
//# sourceMappingURL=SuperAgentRequester.js.map